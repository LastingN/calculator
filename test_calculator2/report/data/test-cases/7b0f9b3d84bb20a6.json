{
  "uid" : "7b0f9b3d84bb20a6",
  "name" : "test_add[except]",
  "fullName" : "test_calc.TestCalc#test_add",
  "historyId" : "091dd209a3495e40179dfe387a2fc1c5",
  "time" : {
    "start" : 1609828829845,
    "stop" : 1609828829845,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None == '请输入数字'",
  "statusTrace" : "self = <test_calculator2.test_calc.TestCalc object at 0x102ddbca0>, get_calc = <code.calculator.Calculator object at 0x102daf760>\nget_datas_add = ['', 5, '请输入数字']\n\n    @pytest.mark.run(order=1)\n    def test_add(self, get_calc, get_datas_add):\n        result = None\n        try:\n            # 调用add函数,返回的结果保存在result里面\n            result = get_calc.add(get_datas_add[0], get_datas_add[1])\n            # 判断result结果是否等于期望的值\n            if isinstance(result, float):\n                result = round(result, 2)\n        except Exception as e:\n            print(e)\n>       assert result == get_datas_add[2]\nE       AssertionError: assert None == '请输入数字'\n\ntest_calc.py:23: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1609828829835,
      "stop" : 1609828829835,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_datas_add",
    "time" : {
      "start" : 1609828829844,
      "stop" : 1609828829844,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None == '请输入数字'",
    "statusTrace" : "self = <test_calculator2.test_calc.TestCalc object at 0x102ddbca0>, get_calc = <code.calculator.Calculator object at 0x102daf760>\nget_datas_add = ['', 5, '请输入数字']\n\n    @pytest.mark.run(order=1)\n    def test_add(self, get_calc, get_datas_add):\n        result = None\n        try:\n            # 调用add函数,返回的结果保存在result里面\n            result = get_calc.add(get_datas_add[0], get_datas_add[1])\n            # 判断result结果是否等于期望的值\n            if isinstance(result, float):\n                result = round(result, 2)\n        except Exception as e:\n            print(e)\n>       assert result == get_datas_add[2]\nE       AssertionError: assert None == '请输入数字'\n\ntest_calc.py:23: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "139e4699fac0841",
      "name" : "stdout",
      "source" : "139e4699fac0841.txt",
      "type" : "text/plain",
      "size" : 131
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_datas_add::0",
    "time" : {
      "start" : 1609828829929,
      "stop" : 1609828829929,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "yunboshengs-MacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "13270-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_datas_add",
    "value" : "['', 5, '请输入数字']"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "7b0f9b3d84bb20a6.json",
  "parameterValues" : [ "['', 5, '请输入数字']" ]
}